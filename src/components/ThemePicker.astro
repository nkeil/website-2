---
const themes = [
  { label: 'Off White', value: 'off-white' },
  { label: 'Red', value: 'red' },
  { label: 'Blue', value: 'blue' },
  { label: 'Yellow', value: 'yellow' },
  { label: 'Green', value: 'green' },
];
---

<div class="container">
  {themes.map((theme) => <div class={'theme-button ' + theme.value} />)}
</div>

<style>
  .container {
    display: flex;
    gap: 10px;
    justify-content: center;
  }

  .theme-button {
    cursor: pointer;
    width: 50px;
    height: 50px;

    border-radius: 10px;
    border: 4px solid #252525;

    background-image: url(paper-texture.png);
    &.off-white {
      background-color: var(--theme-texture-off-white);
    }
    &.red {
      background-color: var(--theme-texture-red);
    }
    &.blue {
      background-color: var(--theme-texture-blue);
    }
    &.yellow {
      background-color: var(--theme-texture-yellow);
    }
    &.green {
      background-color: var(--theme-texture-green);
    }
  }
</style>

<script>
  let currentTheme: string;

  const setTheme = (theme: string, customDocument?: Document) => {
    const selectedDocument = customDocument ? customDocument : document;
    selectedDocument.documentElement.className = `theme-${theme}`;
    localStorage.setItem('theme', theme);
    currentTheme = theme;
  };

  const hydrateButtons = () => {
    for (const button of document.querySelectorAll('.theme-button')) {
      button.addEventListener('click', () => {
        for (const classItem of button.classList) {
          if (classItem === 'theme-button') continue;
          setTheme(classItem);
        }
      });
    }
  };

  const theme = localStorage.getItem('theme');
  if (theme) setTheme(theme);
  else setTheme('off-white');

  document.addEventListener('astro:before-swap', (event) => {
    setTheme(currentTheme, event.newDocument);
  });
  document.addEventListener('astro:page-load', () => {
    hydrateButtons();
  });
</script>

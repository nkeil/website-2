---
const themes = [
  { label: 'Off White', value: 'off-white' },
  { label: 'Red', value: 'red' },
  { label: 'Blue', value: 'blue' },
  { label: 'Yellow', value: 'yellow' },
  { label: 'Green', value: 'green' },
];
---

<ul>
  {
    themes.map((theme) => (
      <li class={'theme-button ' + theme.value}>{theme.label}</li>
    ))
  }
</ul>

<script>
  let currentTheme: string;

  const setTheme = (theme: string, customDocument?: Document) => {
    const selectedDocument = customDocument ? customDocument : document;
    selectedDocument.documentElement.className = `theme-${theme}`;
    localStorage.setItem('theme', theme);
    currentTheme = theme;
  };

  const hydrateButtons = () => {
    for (const button of document.querySelectorAll('.theme-button')) {
      button.addEventListener('click', () => {
        for (const classItem of button.classList) {
          if (classItem === 'theme-button') continue;
          setTheme(classItem);
        }
      });
    }
  };

  const theme = localStorage.getItem('theme');
  if (theme) setTheme(theme);
  else setTheme('off-white');

  document.addEventListener('astro:before-swap', (event) => {
    setTheme(currentTheme, event.newDocument);
  });
  document.addEventListener('astro:page-load', () => {
    hydrateButtons();
  });
</script>

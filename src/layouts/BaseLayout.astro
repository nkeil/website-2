---
import { ViewTransitions } from 'astro:transitions';
import { bgImage } from '../utils/background-image';

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" transition:animate="none">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title ? `${title} | nickkeil.com` : 'nickkeil.com'}</title>
    <ViewTransitions />
  </head>
  <body style={`background-image: url(${bgImage.src})`}>
    <slot />
    {
      /*
       * This comment prevents weird formatting for some reason.
       * See https://github.com/withastro/prettier-plugin-astro/issues/316#issuecomment-2114626247
       */
    }
  </body>
</html>

<style is:global>
  html {
    font-family: system-ui, sans-serif;
    font-size: 90%; /* base size for `rem`` units */

    --theme-off-white: #f3f2ee;
    --theme-texture-off-white: #fff;
    --theme-red: #f56579;
    --theme-texture-red: #ff4062;
    --theme-blue: #b1e2e2;
    --theme-texture-blue: #a4e9eb;
    --theme-yellow: #eacf59;
    --theme-texture-yellow: #f1d02e;
    --theme-green: #b6d086;
    --theme-texture-green: #aacf73;

    --black: #000000;
    --dark-grey: #303030;

    &.theme-off-white {
      --theme-color: var(--theme-off-white);
      --theme-texture-color: var(--theme-texture-off-white);
    }
    &.theme-red {
      --theme-color: var(--theme-red);
      --theme-texture-color: var(--theme-texture-red);
    }
    &.theme-blue {
      --theme-color: var(--theme-blue);
      --theme-texture-color: var(--theme-texture-blue);
    }
    &.theme-yellow {
      --theme-color: var(--theme-yellow);
      --theme-texture-color: var(--theme-texture-yellow);
    }
    &.theme-green {
      --theme-color: var(--theme-green);
      --theme-texture-color: var(--theme-texture-green);
    }
  }

  body {
    margin: 0;
    padding: 60px;
    padding-bottom: 10px;
    color: var(--black);
  }

  html {
    background-color: var(--theme-color);
  }

  body {
    background-color: var(--theme-texture-color);
  }

  h1 {
    background-color: var(--theme-texture-color);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }

  @font-face {
    font-family: 'Franklin Gothic';
    src: url('/fonts/FranklinGothic.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: block;
  }

  @font-face {
    font-family: 'BrotherDeluxe1350';
    src: url('/fonts/BrotherDeluxe1350.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: block;
  }

  a {
    color: inherit;
    text-decoration: inherit;
  }

  /* ================================= CSS RESET ================================ */
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  html {
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
  }

  body,
  h1,
  h2,
  h3,
  h4,
  p,
  figure,
  blockquote,
  dl,
  dd {
    margin-block-end: 0;
  }

  ul[role='list'],
  ol[role='list'] {
    list-style: none;
  }

  body {
    min-height: 100vh;
  }

  h1,
  h2,
  h3,
  h4,
  button,
  input,
  label {
    line-height: 1.1;
    margin: 0;
  }

  h1,
  h2,
  h3,
  h4 {
    text-wrap: balance;
  }

  a:not([class]) {
    text-decoration-skip-ink: auto;
    color: currentColor;
  }

  img,
  picture {
    display: block;
  }

  input,
  button,
  textarea,
  select {
    font-family: inherit;
    font-size: inherit;
  }

  textarea:not([rows]) {
    min-height: 10em;
  }

  :target {
    scroll-margin-block: 5ex;
  }
</style>
